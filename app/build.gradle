apply plugin: 'com.android.application'

//def gitVersion() {
//    if (!System.getenv('CI_BUILD')) {
//        // don't care
//        return 1
//    }
//    def cmd = 'git rev-list HEAD --first-parent --count'
//    cmd.execute().text.trim().toInteger()
//}


android {
    compileSdkVersion tools.cSV
    buildToolsVersion tools.bTV

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))


        def versionMajor = versionProps['VERSION_MAJOR'].toInteger()
        def versionMinor = versionProps['VERSION_MINOR'].toInteger()
        def versionBuild = versionProps['VERSION_BUILD'].toInteger()
        def versionNumber = versionProps['VERSION_CODE'].toInteger()

        defaultConfig {

            applicationId "de.jandrotek.android.aspectra.mini"
            minSdkVersion 15
            targetSdkVersion 22
            versionCode versionNumber
            versionName "${versionMajor}.${versionMinor}.${versionBuild} Release"

        }
    }  else {
        throw new GradleException("Could not read version.properties!")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

    // makes problems by generating dex
//    dexOptions {
//        incremental true
//    }
//    buildToolsVersion '25.0.0'

    dexOptions {
        preDexLibraries = false
    }
}

dependencies {
    // new one
    compile supportDependencies.appCompat
    compile project(':libplotspectrav3')
//    compile supportDependencies.design
//    compile supportDependencies.support
    compile project(':libspectrafiles')
    compile project(':core')
    compile project(':libprefs')
    compile project(':libcomm')
}

